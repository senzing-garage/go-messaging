// Code generated by jtd-codegen for C# + System.Text.Json v0.2.1

using System;
using System.Text.Json.Serialization;

namespace Senzing
{
    public class SenzingMessage
    {
        /// <summary>
        /// Code for message.
        /// </summary>
        [JsonPropertyName("code")]
        public string Code { get; set; }

        /// <summary>
        /// A list of objects sent to the message generator.
        /// </summary>
        [JsonPropertyName("details")]
        public Details Details { get; set; }

        /// <summary>
        /// Time duration reported by the message.
        /// </summary>
        [JsonPropertyName("duration")]
        public int Duration { get; set; }

        /// <summary>
        /// A list of errors.  Usually a stack of errors.
        /// </summary>
        [JsonPropertyName("errors")]
        public Errors Errors { get; set; }

        /// <summary>
        /// The unique identification of the message.
        /// </summary>
        [JsonPropertyName("id")]
        public string Id { get; set; }

        /// <summary>
        /// Log level.  Possible values: TRACE, DEBUG, INFO, WARN, ERROR, FATAL,
        /// or PANIC.
        /// </summary>
        [JsonPropertyName("level")]
        public string Level { get; set; }

        /// <summary>
        /// Location in the code identifying where the message was generated.
        /// </summary>
        [JsonPropertyName("location")]
        public string Location { get; set; }

        /// <summary>
        /// Reason for message.
        /// </summary>
        [JsonPropertyName("reason")]
        public string Reason { get; set; }

        /// <summary>
        /// User-defined status of message.
        /// </summary>
        [JsonPropertyName("status")]
        public string Status { get; set; }

        /// <summary>
        /// Text representation of the message.
        /// </summary>
        [JsonPropertyName("text")]
        public string Text { get; set; }

        /// <summary>
        /// Time message was generated in RFC3339 format.
        /// </summary>
        [JsonPropertyName("time")]
        public DateTimeOffset Time { get; set; }
    }
}
