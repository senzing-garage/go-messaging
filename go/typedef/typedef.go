// Code generated by jtd-codegen for Go v0.2.1. DO NOT EDIT.

package typedef

import "time"

type SenzingMessage struct {
	// Code for message.
	Code string `json:"code"`

	// A list of objects sent to the message generator.
	Details Details `json:"details"`

	// Time duration reported by the message.
	Duration int64 `json:"duration"`

	// A list of errors.  Usually a stack of errors.
	Errors Errors `json:"errors"`

	// The unique identification of the message.
	ID string `json:"id"`

	// Log level.  Possible values: TRACE, DEBUG, INFO, WARN, ERROR, FATAL, or
	// PANIC.
	Level string `json:"level"`

	// Location in the code identifying where the message was generated.
	Location string `json:"location"`

	// Reason for message.
	Reason string `json:"reason"`

	// User-defined status of message.
	Status string `json:"status"`

	// Text representation of the message.
	Text string `json:"text"`

	// Time message was generated in RFC3339 format.
	Time time.Time `json:"time"`
}

// A detail published by the message generator.
type Detail struct {
	// The unique identifier of the detail.
	Key string `json:"key"`

	// The order in which the detail was given to the message generator.
	Position int32 `json:"position"`

	// Datatype of the value.
	Type string `json:"type"`

	// The value of the detail in string form.
	Value string `json:"value"`

	// The value of the detail if it differs from string form.
	ValueRaw interface{} `json:"valueRaw"`
}

// A list of details.
type Details = []Detail

// The text representation of the error.
type Error = string

// A list of errors.  Usually a stack of errors.
type Errors = []Error
